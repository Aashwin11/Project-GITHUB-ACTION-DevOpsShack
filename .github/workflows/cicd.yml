name: CICD Pipeline (Java with Maven)

on:
  push:
    branches: [ "main" ]
    
jobs:

  compile-application:
    # runs-on: self-hosted
    runs-on: v1
    #  runs-on: ubuntu-latest - This is a Shared Runner provided by GitHub

# Inside each job, there are multiple steps. 
# uses - actions 
# uses: actions/checkout@v4to setup an Env. On the runner it will create a Local Repo.
# Each step can have its own name
# Like:
  # - uses: actions/checkout@v4
  # - name: Set up JDK 17
   
    steps:
    - name: Checkout the Repo
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Build with Maven
      run: mvn compile

  security-check:
    # runs-on: self-hosted
    runs-on: v1
    needs: compile-application 
 
   
    steps:
    - name: Checkout the Repo
      uses: actions/checkout@v4

    - name: Trivy Installation
      run: |
        sudo apt-get install wget apt-transport-https gnupg lsb-release -y
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
        echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update -y
        sudo apt-get install trivy -y
        
    - name: Trivy Fs Scan
      run: |
        trivy fs --format table -o fs-report.json .

    - name: gitleak Installation
      run: |
        sudo apt install gitleaks -y

    - name: GitLeaks Code Scan
      run: |
        gitleaks detect soruce . -r gitleaks-report.json -f json
        
  test :
    # runs-on: self-hosted
    runs-on: v1
    needs: security-check

    steps:
    - name: Checkout the Repo
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Unit Test Cases
      run: mvn test

  build_project_and_sonar_scan:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout the Repo
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build Project
      run: mvn package
        
    - name: Cache SOnar Package
      uses: actions/cache@v4
      with: 
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@v2
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          
    - name: SonarCloud Quality Gate Check
      uses: sonarsource/sonarqube-quality-gate-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: Upload JAR Artifact
      uses: actions/upload-artifact@v4
      with:
        name: app-jar
        path: target/*.jar # or path/to/artifact
    - name: List Worksspace contents _AFter JAR UPLOAD
      run: ls -l


   


  build_docker_image_and_push:
    runs-on: v1
    needs: build_project_and_sonar_scan

    steps:
    - name: Checkout the Repo
      uses: actions/checkout@v4

      
    - name: Download JAR Artifact
      uses: actions/download-artifact@v4
      with:
        name: app-jar
        path: app # or path/to/artifact
    - name: LList Worksspace contents _AFter JAR DOWNLOAD
      run: ls -l
    - name: List app directory contents
      run: ls -lh app

    -  name: Login to Docker Hub
       uses: docker/login-action@v3
       with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
       version: v0.7.0
      
    - name: Build and push
      uses: docker/build-push-action@v6
      with:
          push: true
          tags: 11aashwin/bankapp:latest
